install.packages("DBI")
install.packages("odbc")
clear
cls
library(odbc)
sort(unique(odbcListDrivers()[[1]]))
con <- dbConnect(odbc(), "DSN name")
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="ACER-PREDATOR-H", Database = "Admisiones_DWH", User="leste", Password = "holacomoestas*", timeout = 10)
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(DBI)
# Creación de diferentes objetos con notación de R <-
ObjetoCadena <- "Esta es una cadena"
ObjetoEntero <- 2
ObjetoVector <- c(1:5)
str(ObjetoCadena)
str(ObjetoEntero)
str(ObjetoVector)
str(ObjetoCadena)
str(ObjetoEntero)
str(ObjetoVector)
typeof(ObjetoVector)
class(ObjetoVector)
str(ObjetoCadena)
str(ObjetoEntero)
str(ObjetoVector)
typeof(ObjetoVector) # Información del tipo de clase
typeof(ObjetoEntero)
typeof(ObjetoCadena)
class(ObjetoVector) # Información del tipo de objeto de la cual se instanció
class(ObjetoEntero)
class(ObjetoCadena)
Temperaturas
#Data frames
Temperaturas <- data.frame(Anios=C(2015,2016,2017,2018),
Invierno=c(5,8,7,10),
Primavera=c(10,12,15,13),
Verano=c(25,26,29,32),
Otonio=c(13,14,12,10)
)
Temperaturas <- data.frame(Anios=c(2015,2016,2017,2018),
Invierno=c(5,8,7,10),
Primavera=c(10,12,15,13),
Verano=c(25,26,29,32),
Otonio=c(13,14,12,10)
)
Temperaturas
Temperaturas$Verano
View(Temperaturas)
head(Temperaturas,2)
tail(Temperaturas,1)
# GroupBy's
TemperaturasRandom <- data.frame(Anios=(sample(c(2015:2018),20,replace = TRUE)),
Invierno=rnorm(20, mean=2, sd=1),
Primavera=rnorm(20, mean=15, sd=3),
Verano=rnorm(20, mean=2, sd=4),
Otonio=rnorm(20, mean=10, sd=2)
)
View(Temperaturas)
View(Temperaturas)
View(TemperaturasRandom)
View(TemperaturasRandom)
TemperaturasRandom  %>% summarise(TemperaturaPromedio = mean(Invierno))
TemperaturasRandom  %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
TemperaturasRandom  %>% slice(1:5) %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
TemperaturasRandomPromedio <- TemperaturasRandom %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
ggplot(data=TemperaturasRandomPromedio, aes(x=Anio,y=TemperaturaPromedio))+
geom_line()+
geom_text(
label=TemperaturasRandomPromedio$TemperaturaPromedio,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
# ggplot
TemperaturasRandomPromedio <- TemperaturasRandom %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
ggplot(data=TemperaturasRandomPromedio, aes(x=Anios,y=TemperaturaPromedio))+
geom_line()+
geom_text(
label=TemperaturasRandomPromedio$TemperaturaPromedio,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
TemperaturasRandomPromedio <- TemperaturasRandom %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
ggplot(data=TemperaturasRandomPromedio, aes(x=Anios,y=TemperaturaPromedio))+
geom_line()+
geom_text(
label=TemperaturasRandomPromedio$TemperaturaPromedio,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
# Demo R
# Comandos para instalar paquetes y utilizar librerías
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(DBI)
# Creación de diferentes objetos con notación =
ObjetoCadena = "Esta es una cadena"
ObjetoEntero = 2
ObjetoVector = c(1:5) # Rango de números continuos
# Creación de diferentes objetos con notación de R <-
ObjetoCadena <- "Esta es una cadena"
ObjetoEntero <- 2
ObjetoVector <- c(1:5)
#Funciones para explorar objetos
str(ObjetoCadena)
str(ObjetoEntero)
str(ObjetoVector)
typeof(ObjetoVector) # Información del tipo de clase
typeof(ObjetoEntero)
typeof(ObjetoCadena)
class(ObjetoVector) # Información del tipo de objeto de la cual se instanció
class(ObjetoEntero)
class(ObjetoCadena)
#Data frames
Temperaturas <- data.frame(Anios=c(2015,2016,2017,2018),
Invierno=c(5,8,7,10),
Primavera=c(10,12,15,13),
Verano=c(25,26,29,32),
Otonio=c(13,14,12,10)
)
Temperaturas$Verano
head(Temperaturas,2) # Muestra los 2 registros de arriba
tail(Temperaturas,1) # Muestra el registro de abajo
# dplyr
# Filtrar informción
Temperaturas %>% filter(Anios==2018)
Temperaturas %>% slice(1:2)
# Ordenar
Temperaturas %>% arrange(desc(Invierno))
# GroupBy's
TemperaturasRandom <- data.frame(Anios=(sample(c(2015:2018),20,replace = TRUE)),
Invierno=rnorm(20, mean=2, sd=1),
Primavera=rnorm(20, mean=15, sd=3),
Verano=rnorm(20, mean=2, sd=4),
Otonio=rnorm(20, mean=10, sd=2)
)
TemperaturasRandom  %>% summarise(TemperaturaPromedio = mean(Invierno))
TemperaturasRandom  %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
TemperaturasRandom  %>% slice(1:5) %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
# ggplot2
TemperaturasRandomPromedio <- TemperaturasRandom %>% group_by(Anios)  %>% summarise(TemperaturaPromedio = mean(Invierno))
ggplot(data=TemperaturasRandomPromedio, aes(x=Anios,y=TemperaturaPromedio))+
geom_line()+
geom_text(
label=TemperaturasRandomPromedio$TemperaturaPromedio,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
# ------------------------------------------------------------------------------------------------------------------
# Laboratorio 04 - Introducción a leguajes estadísticos - Solución
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimesion.Carrera c on (e.sk_carrera = c.sk_carrera)")
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(dfsql)
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
View(DF_ConteoPorFacultad)
View(DF_ConteoPorFacultad)
ggplot(DF:ConteoPorFacultad, aes(x="", y=n, fill=NombreFacultad))+
geom_bar(stat = "identity", width = 1)+
coord_polar("y", start = 0)
ggplot(DF_ConteoPorFacultad, aes(x="", y=n, fill=NombreFacultad))+
geom_bar(stat = "identity", width = 1)+
coord_polar("y", start = 0)
dfsql2 <- dbGetQuery(conn=con,"SELECT e.*,g.Genero
FROM Dimension.Candidato C")
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *
FROM Dimension.Candidato C")
View(dfsql2)
DF_ConteoPorGeneroCandidato <- dfsql2 %>% count(Candidato)
DF_ConteoPorGeneroCandidato <- dfsql2 %>% count(Candidato.Genero)
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT e.*,c.Genero
FROM Dimension.Candidato C")
View(dfsql2)
# Inciso B - i
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
View(DF_ConteoPorFacultad)
DF_ConteoPorGeneroCandidato <- dfsql2 %>% count(Candidato.Genero)
dfsql2 <- dbGetQuery(conn=con,"SELECT e.*,c.Genero
FROM Dimension.Candidato C")
DF_ConteoPorGeneroCandidato <- dfsql2 %>% count(Genero)
View(DF_ConteoPorGeneroCandidato)
dfsql3 <- dbGetQuery(conn=con,"SELECT e.*,c.Precio
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
# Inciso B - iii
dfsql3 <- dbGetQuery(conn=con,"SELECT e.*,c.NombreCarrera
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(dfsql3)
DF_TotalIngresos <- dfsql3 %>% group_by(Carrera) %>% sum(Precio)
DF_TotalIngresos <- dfsql3 %>% group_by(NombreCarrera) %>% sum(Precio)
DF_TotalIngresos <- dfsql3 %>% group_by(NombreCarrera) %>% summarise(TotalIngresos = sum(Precio))
View(DF_TotalIngresos)
dfsql4 <- dbGetQuery(conn=con,"SELECT e.*,c.NombreCarrera
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(dfsql4)
View(dfsql4)
# Inciso B - i
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(dfsql4)
DF_PromediosAltos <- dfsql4 %>% slice(1:3) %>% group_by(NombreFacultad) %>% summarise(PromediosAltos = max(NotaToal))
DF_PromediosAltos <- dfsql4 %>% slice(1:3) %>% group_by(NombreFacultad) %>% summarise(PromediosAltos = max(NotaTotal))
dfsql4 <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_PromediosAltos <- dfsql4 %>% slice(1:3) %>% group_by(NombreFacultad) %>% summarise(PromediosAltos = max(NotaTotal))
View(DF_PromediosAltos)
View(DF_PromediosAltos)
dfsql5 <- dbGetQuery(conn=con,"SELECT e.*,c.NombreCarrera
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_PromediosCarreras <- dfsql5 %>% group_by(NombreCarrera) %>% summarise(PromediosCarreras = mean(NotaTotal))
View(DF_PromediosCarreras)
ggplot(DF_PromediosCarrera, aes(x="", y=n, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x="", y=n, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1)
barplot(DF_PromediosCarreras)
ggplot(DF_PromediosCarreras)+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras)+
geom_bar(aes(x="", y=n, fill=NombreCarrera)
ggplot(DF_PromediosCarreras, aes(x="PromedioNota", y="NombreCarrera")+
geom_bar(stat = "identity", width = 1)
dfsql5 <- dbGetQuery(conn=con,"SELECT e.*,c.NombreCarrera
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_PromediosCarreras <- dfsql5 %>% group_by(NombreCarrera) %>% summarise(PromediosCarreras = mean(NotaTotal))
ggplot(DF_PromediosCarreras, aes(x="PromedioNota", y="NombreCarrera", fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x="PromedioNota", y="NombreCarrera", fill=NombreCarrera, ))+
geom_bar(stat = "identity", width = 1)
perf+coord_flip()
ggplot(DF_PromediosCarreras, aes(x="PromedioNota", y="NombreCarrera", fill=NombreCarrera, ))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromedioCarreras, fill=NombreCarrera, ))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromedioCarreras, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill=Nombre Carrera))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1)
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1, fill = "lightblue")+
theme_dark()
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 1)+
theme_dark()
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 0.5)+
theme_dark()
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill= "lightblue"))+
geom_bar(stat = "identity", width = 0.5)+
theme_dark()
ggplot(DF_PromediosCarreras, aes(x=NombreCarrera, y=PromediosCarreras, fill=NombreCarrera))+
geom_bar(stat = "identity", width = 0.5)+
theme_dark()
# Inciso C - iii
dfsql6 <- dbGetQuery(conn=con,"SELECT e.*, f.Year
FROM Fact.Examen E INNER JOIN
Dimension.Fecha F ON (e.DateKey = f.DateKey")
# Inciso C - iii
dfsql6 <- dbGetQuery(conn=con,"SELECT e.*, f.Year
FROM Fact.Examen E INNER JOIN
Dimension.Fecha F ON (e.DateKey = f.DateKey"))
# Inciso C - iii
dfsql6 <- dbGetQuery(conn=con,"SELECT e.*, f.Year
FROM Fact.Examen E INNER JOIN
Dimension.Fecha F ON (e.DateKey = f.DateKey)")
DF_CantidadExamenesAnuales <- dfsql6 %>% group_by(Year) %>% count(ID_Examen)
View(dfsql5)
View(DF_CantidadExamenesAnuales)
DF_CantidadExamenesAnuales <- dfsql6 %>% group_by(Year) %>% count(Examen)
DF_CantidadExamenesAnuales <- dfsql6 %>% group_by(Year) %>% count(DateKey)
View(DF_CantidadExamenesAnuales)
DF_CantidadExamenesAnuales <- dfsql6 %>% group_by(Year) %>% count(Year)
View(DF_CantidadExamenesAnuales)
ggplot(DF_CantidadExamenesAnuales, aes(x=Year, y=count(Year), fill=count(Year)))+
geom_line()+
geom_point()
ggplot(DF_CantidadExamenesAnuales, aes(x=Year, y=n, group=1))+
geom_line()+
geom_point()
View(DF_CantidadExamenesAnuales)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
View(DF_CantidadExamenesAnuales)
View(DF_CantidadExamenesAnuales)
View(DF_ConteoPorFacultad)
View(DF_CantidadExamenesAnuales)
View(DF_ConteoPorGeneroCandidato)
View(DF_CantidadExamenesAnuales)
View(DF_CantidadExamenesAnuales)
View(DF_CantidadExamenesAnuales)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="ACER-PREDATOR-H\DEVELOPER_SQL", Database = "Admisiones", User="leste", Password = "holacomoestas*", timeout = 10)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="DEVELOPER_SQL", Database = "Admisiones", User="leste", Password = "holacomoestas*", timeout = 10)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="DEVELOPER_SQL", Database = "Admisiones", User="leste", Password = "holacomoestas*", timeout = 10)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="ACER-PREDATOR-H\DEVELOPER_SQL", Database = "Admisiones", User="leste", Password = "holacomoestas*", timeout = 10)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="ACER-PREDATOR-H\\DEVELOPER_SQL", Database = "Admisiones", User="leste", Password = "holacomoestas*", timeout = 10)
# Conectar a DB
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H\\DEVELOPER_SQL",
Database = "Admisiones", User = "leste", Password = "holacomoestas*",
timeout = 10)
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
# Inciso B - i
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
# Inciso B - i
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Examen E INNER JOIN
Carrera c on (e.sk_carrera = c.sk_carrera)")
# Inciso B - i
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Examen E INNER JOIN
Carrera c on (e.ID_Carrera = c.ID_Carrera)")
# Conectar a DB
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H\\DEVELOPER_SQL",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
# Conectar a DB
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
# Inciso B - i
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
View(dfsql)
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
install.packages("magrittr")
install.packages("dplyr")
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(DBI)
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
View(DF_ConteoPorFacultad)
View(DF_ConteoPorFacultad)
View(DF_ConteoPorFacultad)
View(dfsql)
View(dfsql)
dfsql2 <- dbGetQuery(conn=con,"SELECT e.*,c.Genero
FROM Dimension.Candidato C")
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
View(dfsql)
View(dfsql)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-\\DEVELOPER_SQL",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H\\DEVELOPER_SQL",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
# Conectar a DB
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H\\DEVELOPER_SQL",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
# Inciso B - i
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(dfsql)
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
View(DF_ConteoPorFacultad)
View(DF_ConteoPorFacultad)
dfsql2 <- dbGetQuery(conn=con,"SELECT e.*,c.Genero
FROM Dimension.Candidato C")
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
DF_ConteoPorGeneroCandidato <- dfsql2 %>% count(Genero)
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
View(dfsql2)
View(dfsql2)
DF_ConteoPorGeneroCandidato <- dfsql2 %>% summarise(Generos = count(Genero))
DF_ConteoPorGeneroCandidato <- dfsql2 %>% summarise(modify_at(Generos = count(Genero), as.character())
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "ACER-PREDATOR-H\\DEVELOPER_SQL",
Database = "Admisiones_DWH", User = "leste", Password = "holacomoestas*",
timeout = 10)
dfsql <- dbGetQuery(conn=con,"SELECT e.*,c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
DF_ConteoPorGeneroCandidato <- dfsql2 %>% summarise(modify_at(Generos = count(Genero), as.character())
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
# Inciso B - ii
dfsql2 <- dbGetQuery(conn=con,"SELECT *,c.Genero
FROM Dimension.Candidato C")
DF_ConteoPorGeneroCandidato <- dfsql2 %>% count(Genero)
# Inciso B - iii
dfsql3 <- dbGetQuery(conn=con,"SELECT e.NotalTotal, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
# Inciso B - iii
dfsql3 <- dbGetQuery(conn=con,"SELECT e.NotaTotal, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
DF_TotalIngresos <- dfsql3 %>% group_by(NombreCarrera) %>% summarise(TotalIngresos = sum(Precio))
dfsql3 <- dbGetQuery(conn=con,"SELECT e.NotaTotal, c.NombreCarrera
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_Carrera = c.sk_Carrera)")
DF_TotalIngresos <- dfsql3 %>% group_by(NombreCarrera) %>% summarise(TotalIngresos = sum(Precio))
# Inciso B - iii
dfsql3 <- dbGetQuery(conn=con,"SELECT e.NotaTotal, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(dfsql3)
View(dfsql3)
DF_TotalIngresos <- dfsql3 %>% group_by(NombreCarrera) %>% summarise(TotalIngresos = sum(Precio))
DF_TotalIngresos <- dfsql3 %>% group_by(NombreFacultad) %>% summarise(TotalIngresos = sum(Precio))
DF_TotalIngresos <- dfsql3 %>% group_by(NombreCarrera) %>% summarise(TotalIngresos = sum(Precio))
